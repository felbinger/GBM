name: CI

on:
  push:
    branches: [ master ]
    tags: [ 'v*' ]
  pull_request:
    branches:
      - master
  schedule:
    - cron: '0 0 * * *' # everyday at 00:00 UTC

jobs:

  lint:
    name: Linting (GoLang 1.15)
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.15
        uses: actions/setup-go@v2
        with:
          go-version: 1.15
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Cache build dependence
        uses: actions/cache@v2
        with:
          # Cache
          path: ~/go/pkg/mod
          # Cache key
          key: ubuntu-latest-go-${{ hashFiles('**/_go.sum') }}
          # An ordered list of keys to use for restoring the cache if no cache hit occurred for key
          restore-keys: ubuntu-latest-go-

      - name: Install go ci lint
        run: curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.27.0
        working-directory: src/gbm

      - name: Run Linter
        run: golangci-lint run --timeout=10m -v --disable-all --enable=govet --enable=staticcheck --enable=ineffassign --enable=misspell
        working-directory: src/gbm

  test:
    name: Testing (GoLang ${{ matrix.go_version }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go_version:
          - 1.14
          - 1.15

    steps:

      - name: Set up Go ${{ matrix.go_version }}
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go_version }}
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Cache build dependence
        uses: actions/cache@v2
        with:
          # Cache
          path: ~/go/pkg/mod
          # Cache key
          key: ubuntu-latest-go-${{ hashFiles('**/_go.sum') }}
          # An ordered list of keys to use for restoring the cache if no cache hit occurred for key
          restore-keys: ubuntu-latest-go-

      - name: Install goimports
        run: go get golang.org/x/tools/cmd/goimports
        working-directory: src/gbm

      - name: Test
        run: go test -v -race ./...
        working-directory: src/gbm

  build:
    needs: [ lint, test ]
    name: Building (GoLang 1.15)
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.15
        uses: actions/setup-go@v2
        with:
          go-version: 1.15
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Cache build dependence
        uses: actions/cache@v2
        with:
          # Cache
          path: ~/go/pkg/mod
          # Cache key
          key: ubuntu-latest-go-${{ hashFiles('**/_go.sum') }}
          # An ordered list of keys to use for restoring the cache if no cache hit occurred for key
          restore-keys: ubuntu-latest-go-

      - name: Install goimports
        run: go get golang.org/x/tools/cmd/goimports
        working-directory: src/gbm

      - name: Build
        run: go build -o ../bin/gbm -v
        working-directory: src/gbm

      - uses: actions/upload-artifact@v2
        with:
          name: gbm
          path: bin/gbm

  analyze:
    needs: [ lint,test ]
    name: "CodeQL: Analyze"
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v1
        with:
          languages: go

      #- name: Autobuild
      #  uses: github/codeql-action/autobuild@v1

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v1
